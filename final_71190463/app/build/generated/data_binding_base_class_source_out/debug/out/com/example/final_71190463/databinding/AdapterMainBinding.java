// Generated by view binder compiler. Do not edit!
package com.example.final_71190463.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.final_71190463.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AdapterMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView btnDelete;

  @NonNull
  public final ImageView btnEdit;

  @NonNull
  public final TextView genreBook;

  @NonNull
  public final TextView titleBook;

  @NonNull
  public final TextView yearBook;

  private AdapterMainBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView btnDelete,
      @NonNull ImageView btnEdit, @NonNull TextView genreBook, @NonNull TextView titleBook,
      @NonNull TextView yearBook) {
    this.rootView = rootView;
    this.btnDelete = btnDelete;
    this.btnEdit = btnEdit;
    this.genreBook = genreBook;
    this.titleBook = titleBook;
    this.yearBook = yearBook;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AdapterMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AdapterMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.adapter_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AdapterMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_delete;
      ImageView btnDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnDelete == null) {
        break missingId;
      }

      id = R.id.btn_edit;
      ImageView btnEdit = ViewBindings.findChildViewById(rootView, id);
      if (btnEdit == null) {
        break missingId;
      }

      id = R.id.genre_book;
      TextView genreBook = ViewBindings.findChildViewById(rootView, id);
      if (genreBook == null) {
        break missingId;
      }

      id = R.id.title_book;
      TextView titleBook = ViewBindings.findChildViewById(rootView, id);
      if (titleBook == null) {
        break missingId;
      }

      id = R.id.year_book;
      TextView yearBook = ViewBindings.findChildViewById(rootView, id);
      if (yearBook == null) {
        break missingId;
      }

      return new AdapterMainBinding((ConstraintLayout) rootView, btnDelete, btnEdit, genreBook,
          titleBook, yearBook);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
